$PSVersionTable
$env:PSModulePath -Split ";"

#psm1 file extension is for Modules (Container for Commands)

Get-Command -Noun *net*
Get-Command -Verb *get*

Get-Module

Get-Help Get-ChildItem -ShowWindow
Get-Help Get-NetIPConfiguration -Parameter All
Get-Help Get-ChildItem -Online #Online Technet Article

Get-Command -Noun Alias
Get-Command *Alias
Get-Command New-Alias -Syntax
Get-Command Get-ChildItem -Syntax

New-Alias Child2 Get-ChildItem 
Get-Alias | findstr Child2

$profile
$profile | Select * #All Profiles (ISE or PS : C:\Users\prudentia\Documents\WindowsPowerShell\profile.ps1)

#Write-Host "User: $env:USERNAME"
#Use Transcript to record commands being run.

Set-ExecutionPolicy Unrestricted -Scope LocalMachine

Get-Command *transcript
Start-Transcript -Path $home\Desktop\TranscriptTest.txt -Append
Stop-Transcript

#Control Mechs // Risk Mitigation : WhatIf & Confirm
Stop-Process -name c* -WhatIf
Stop-Process -name c* -WhatIf:$true
Stop-Process -name c* -Confirm #Confirm Manually For Each Process

$ConfirmPreference

#For running in the background
Restart-Computer Machine1 -Confirm:$false

Update-Help -Verbose -Force -SourcePath C:\PowerShell-Help
?? - Get-Childitem $PSHome -Filter *helpinfo.xml -Recurse | Remove-Item Confirm:$false
Get-Help Get-Process -Full
Get-Help Get-NetAdapter -Examples
Get-Help about_Updatable_Help
Get-Help Save-Help -Examples
 
Get-Process -Id $pid -Module
Get-Process -Id $pid -Verbose
#F7
Get-History
#GUI Fill & Exec
Show-Command Get-Process 

Show-Command Get-Process -PassThru -Outvariable result #Click OK on the Popup
$result | Invoke-Expression

Get-Process -Id $pid -Module

$a=1
$a.GetType()
$svc = Get-Service Spooler
$svc.GetType
$svc.GetHashCode()

$svc | select *
$svc.RequiredServices
(Get-Service Spooler).RequiredServices
$svc.Start()
$svc.StartType

#List All Props & Meths
$svc | Get-Member

 
(Get-Date).Date | Get-Member
(Get-Date).Date.Month | Get-Member
 
(Get-Date).ToShortDateString()

Get-Culture

Get-ChildItem -File
Get-ChildItem -Directory

Get-ChildItem -Path .. -File | where LastWriteTime -lt (Get-Date).AddDays(-30) | Remove-Item -WhatIf

Get-ChildItem | Get-Member #Lists for ALL Object Types - In this case for Directories as well as File

"spooler", "bits" | Get-Service
Get-Content <File> | Get-Service | where StartType -eq manual
Get-Content <File> | Get-Service

$var = Get-Content <File>
$var = Get-Content <File> | Get-Service | where StartType -eq manual
$var[0] #Picking Up First Entry from the Variable
